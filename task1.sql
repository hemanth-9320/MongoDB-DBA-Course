CREATE DATABASE ORG1;
SHOW DATABASES;
USE ORG1;
CREATE TABLE Worker (
WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
FIRST_NAME CHAR(25),
LAST_NAME CHAR(25),
SALARY INT(15),
JOINING_DATE DATETIME,
DEPARTMENT CHAR(25)
);
INSERT INTO Worker
(WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE,
DEPARTMENT) VALUES
(001, 'Monika', 'Arora', 100000, '14-02-20
09.00.00', 'HR'),
(002, 'Niharika', 'Verma', 80000, '14-06-11
09.00.00', 'Admin'),
(003, 'Vishal', 'Singhal', 300000, '14-02-20
09.00.00', 'HR'),
(004, 'Amitabh', 'Singh', 500000, '14-02-20
09.00.00', 'Admin'),
(005, 'Vivek', 'Bhati', 500000, '14-06-11
09.00.00', 'Admin'),
(006, 'Vipul', 'Diwan', 200000, '14-06-11
09.00.00', 'Account'),
(007, 'Satish', 'Kumar', 75000, '14-01-20
09.00.00', 'Account'),
(008, 'Geetika', 'Chauhan', 90000, '14-04-11
09.00.00', 'Admin');
CREATE TABLE Bonus (
WORKER_REF_ID INT,
BONUS_AMOUNT INT(10),
BONUS_DATE DATETIME,
FOREIGN KEY (WORKER_REF_ID)
REFERENCES Worker(WORKER_ID)
 ON DELETE CASCADE
);
INSERT INTO Bonus
(WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
(001, 5000, '16-02-20'),
(002, 3000, '16-06-11'),
(003, 4000, '16-02-20'),
(001, 4500, '16-02-20'),
(002, 3500, '16-06-11');

CREATE TABLE Title (
WORKER_REF_ID INT,
WORKER_TITLE CHAR(25),
AFFECTED_FROM DATETIME,
FOREIGN KEY (WORKER_REF_ID)
REFERENCES Worker(WORKER_ID)
 ON DELETE CASCADE
);
INSERT INTO Title
(WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
(001, 'Manager', '2016-02-20 00:00:00'),
(002, 'Executive', '2016-06-11 00:00:00'),
(008, 'Executive', '2016-06-11 00:00:00'),
(005, 'Manager', '2016-06-11 00:00:00'),
(004, 'Asst. Manager', '2016-06-11 00:00:00'),
(007, 'Executive', '2016-06-11 00:00:00'),
(006, 'Lead', '2016-06-11 00:00:00'),
(003, 'Lead', '2016-06-11 00:00:00');

select * from Worker;
select * from Bonus;
select * from Title;

-- Question 1
SELECT FIRST_NAME AS WORKER_NAME
FROM Worker;

-- Question 2
SELECT UPPER(FIRST_NAME) AS upper
FROM Worker;

-- Question 3
SELECT DISTINCT DEPARTMENT
FROM Worker;

-- Question 4
SELECT SUBSTRING(FIRST_NAME, 1, 3) AS prefix
FROM Worker;

-- Question 5
SELECT POSITION('a' IN FIRST_NAME) AS position_of_a
FROM Worker
WHERE FIRST_NAME = 'Amitabh';

-- Question 6
SELECT RTRIM(FIRST_NAME) AS no_white
FROM Worker;

-- Question 7
SELECT LTRIM(DEPARTMENT) AS from_left
FROM Worker;

-- Question 8
SELECT DISTINCT DEPARTMENT , LENGTH(DEPARTMENT) as DEPT
FROM Worker;

-- Question 9
SELECT REPLACE(FIRST_NAME, 'a', 'A') AS new_name
FROM Worker;

-- Question 10
SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS COMPLETE_NAME
FROM Worker;

-- Question 11
SELECT * FROM Worker
ORDER BY FIRST_NAME ASC;

-- Question 12
SELECT * FROM Worker
ORDER BY FIRST_NAME ASC, DEPARTMENT DESC;

-- Question 13
SELECT * FROM Worker
WHERE FIRST_NAME IN ('Vipul', 'Satish');

-- Question 14
SELECT * FROM Worker
WHERE FIRST_NAME NOT IN ('Vipul', 'Satish');

-- Question 15
SELECT * FROM Worker
WHERE DEPARTMENT = 'Admin';

-- Question 16
SELECT * FROM Worker
WHERE FIRST_NAME LIKE '%a%';

-- Question 17
SELECT * FROM Worker
WHERE FIRST_NAME LIKE '%a';

-- Question 18
SELECT * FROM Worker
WHERE FIRST_NAME LIKE '%h' AND LENGTH(FIRST_NAME) = 6;

-- Question 19
SELECT * FROM Worker
WHERE SALARY between 100000 AND 500000;

-- Question 20
SELECT * FROM Worker
WHERE YEAR(JOINING_DATE) = 2014 AND MONTH(JOINING_DATE) = 2;

-- Question 21
SELECT COUNT(*) AS Employee_Count FROM Worker
WHERE DEPARTMENT = 'Admin';

-- Question 22
SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS FULL_NAME FROM Worker
WHERE SALARY BETWEEN 50000 AND 100000;

-- Question 23
SELECT DEPARTMENT, COUNT(*) FROM Worker
GROUP BY DEPARTMENT ORDER BY COUNT(*) DESC;

-- Question 24
SELECT * FROM Worker
WHERE WORKER_ID IN (SELECT WORKER_REF_ID FROM Title WHERE WORKER_TITLE = 'Manager');

-- Question 25
SELECT FIRST_NAME, LAST_NAME, COUNT(*) FROM Worker
GROUP BY FIRST_NAME, LAST_NAME HAVING COUNT(*) > 1;

-- Question 26
SELECT * FROM Worker 
WHERE WORKER_ID % 2 != 0;

-- Question 27
SELECT * FROM Worker 
WHERE WORKER_ID % 2 = 0;

-- Question 28
CREATE TABLE Clonework AS
SELECT * FROM Worker;
SELECT * FROM Clonework;

-- Question 29
SELECT Worker.* FROM Worker 
INNER JOIN Title ON Worker.WORKER_ID = Title.WORKER_REF_ID;

-- Question 30
SELECT * FROM Worker
WHERE WORKER_ID NOT IN (SELECT WORKER_ID FROM Clonework);

-- Question 31
SELECT NOW();

-- Question 32
SELECT *FROM Worker LIMIT 10;

-- Question 33
SELECT DISTINCT Salary FROM Worker 
ORDER BY Salary DESC LIMIT 4, 1;

-- Question 34
SELECT SALARY FROM Worker W1
WHERE 4 = (SELECT COUNT(DISTINCT SALARY)
 FROM Worker W2
 WHERE W2.SALARY > W1.SALARY);

-- Question 35
SELECT * FROM Worker 
WHERE SALARY IN (SELECT SALARY FROM Worker GROUP BY SALARY HAVING COUNT(*) > 1);

-- Question 36
SELECT DISTINCT SALARY FROM Worker 
ORDER BY SALARY DESC LIMIT 1 OFFSET 1;

-- Question 37
SELECT * FROM Worker 
WHERE worker_id=1 UNION ALL SELECT * FROM Worker WHERE worker_id =1;

-- Question 38
SELECT w.* FROM Worker w 
INNER JOIN Bonus b ON w.WORKER_ID = b.WORKER_REF_ID;

-- Question 39
SELECT * FROM Worker LIMIT 4;

-- Question 40
SELECT DEPARTMENT FROM Worker
GROUP BY DEPARTMENT HAVING COUNT(*) < 5;

-- Question 41
SELECT DEPARTMENT, COUNT(*)  FROM Worker 
GROUP BY DEPARTMENT;

-- Question 42
SELECT * FROM Worker ORDER BY WORKER_ID DESC LIMIT 1;

-- Question 43
SELECT * FROM Worker LIMIT 1;

-- Question 44
SELECT * FROM (SELECT * FROM Worker ORDER BY WORKER_ID DESC LIMIT 5)
AS sub ORDER BY WORKER_ID ASC;

-- Question 45
SELECT FIRST_NAME, LAST_NAME FROM Worker 
WHERE (DEPARTMENT, SALARY) IN (SELECT DEPARTMENT, MAX(SALARY) FROM Worker GROUP BY DEPARTMENT);

-- Question 46
SELECT DISTINCT SALARY FROM Worker 
ORDER BY SALARY DESC LIMIT 3;

-- Question 47
SELECT DISTINCT SALARY FROM Worker 
ORDER BY SALARY ASC LIMIT 3;

-- Question 48
SELECT DISTINCT SALARY FROM Worker 
ORDER BY SALARY DESC LIMIT 2, 1;
 
 -- Question 49
SELECT DEPARTMENT, SUM(SALARY) AS TOTAL_SALARY FROM Worker
GROUP BY DEPARTMENT;

-- Question 50
SELECT FIRST_NAME, LAST_NAME FROM Worker
WHERE SALARY = (SELECT MAX(SALARY) FROM Worker);